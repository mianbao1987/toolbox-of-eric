graph: {
node.borderwidth: 1
//node.margin: 1
edge.thickness: 1
splines: yes
//layoutalgorithm: max_depth
graph: {
title: "search"
node.color: white
folding: 1
graph: {
title: "search.ENTRY"
label: "ENTRY"
folding: 1
vertical_order: 1
shape: ellipse
node: {
label: "ENTRY"
vertical_order: 1
}
}
graph: {
title: "search.EXIT"
label: "EXIT"
folding: 1
vertical_order: 2
shape: ellipse
node: {
label: "EXIT"
vertical_order: 2
}
}
}
graph: {
title: "depth_first_search"
node.color: white
folding: 1
graph: {
title: "depth_first_search.ENTRY"
label: "ENTRY"
folding: 1
vertical_order: 1
shape: ellipse
node: {
label: "ENTRY"
vertical_order: 1
}
}
graph: {
title: "depth_first_search.EXIT"
label: "EXIT"
folding: 1
vertical_order: 2
shape: ellipse
node: {
label: "EXIT"
vertical_order: 2
}
}
}
graph: {
title: "is_ancestor"
node.color: white
folding: 1
graph: {
title: "is_ancestor.ENTRY"
label: "ENTRY"
folding: 1
vertical_order: 1
shape: ellipse
node: {
label: "ENTRY"
vertical_order: 1
}
}
graph: {
title: "is_ancestor.EXIT"
label: "EXIT"
folding: 1
vertical_order: 2
shape: ellipse
node: {
label: "EXIT"
vertical_order: 2
}
}
}
graph: {
title: "is_ancestor"
node.color: white
folding: 1
graph: {
title: "is_ancestor.ENTRY"
label: "ENTRY"
folding: 1
vertical_order: 1
shape: ellipse
node: {
label: "ENTRY"
vertical_order: 1
}
}
graph: {
title: "is_ancestor.EXIT"
label: "EXIT"
folding: 1
vertical_order: 13
shape: ellipse
node: {
label: "EXIT"
vertical_order: 13
}
}
graph: {
title: "is_ancestor.2"
label: "bb 2"
folding: 1
vertical_order: 2
shape: ellipse
node: {
label: "  if (targetD.4192_5(D) == sourceD.4191_7(D))  
    goto <bb 11>;  
  else  
    goto <bb 3>;  "
vertical_order: 2
}
}
graph: {
title: "is_ancestor.11"
label: "bb 11"
folding: 1
vertical_order: 12
shape: ellipse
node: {
label: "  return D.5594_4;  "
vertical_order: 12
}
}
graph: {
title: "is_ancestor.3"
label: "bb 3"
folding: 1
vertical_order: 3
shape: ellipse
node: {
label: "  pretmp.24D.5629_1 = cfgD.4174;  
  pretmp.26D.5631_19 = pretmp.24D.5629_1->entryD.4155;  
  goto <bb 5>;  "
vertical_order: 3
}
}
graph: {
title: "is_ancestor.5"
label: "bb 5"
folding: 1
vertical_order: 4
shape: ellipse
node: {
label: "  veD.4196_9 = bbD.4195_21->predD.4147;  
  if (veD.4196_9 != 0B)  
    goto <bb 6>;  
  else  
    goto <bb 10>;  "
vertical_order: 4
}
}
graph: {
title: "is_ancestor.4"
label: "bb 4"
folding: 1
vertical_order: 11
shape: ellipse
node: {
label: "  if (bbD.4195_2 == sourceD.4191_7(D))  
    goto <bb 11>;  
  else  
    goto <bb 13>;  "
vertical_order: 11
}
}
graph: {
title: "is_ancestor.10"
label: "bb 10"
folding: 1
vertical_order: 10
shape: ellipse
node: {
label: "  if (bbD.4195_2 != pretmp.26D.5631_19)  
    goto <bb 4>;  
  else  
    goto <bb 11>;  "
vertical_order: 10
}
}
graph: {
title: "is_ancestor.13"
label: "bb 13"
folding: 1
vertical_order: 12
shape: ellipse
node: {
label: "   "
vertical_order: 12
}
}
graph: {
title: "is_ancestor.6"
label: "bb 6"
folding: 1
vertical_order: 5
shape: ellipse
node: {
label: "  eD.4197_20 = veD.4196_9->edgeD.4138;  
  D.5595_23 = eD.4197_20->typeD.4133;  
  if (D.5595_23 == 1)  
    goto <bb 8>;  
  else  
    goto <bb 9>;  "
vertical_order: 5
}
}
graph: {
title: "is_ancestor.8"
label: "bb 8"
folding: 1
vertical_order: 9
shape: ellipse
node: {
label: "  bbD.4195_12 = eD.4197_18->sourceD.4134;  
  goto <bb 10>;  "
vertical_order: 9
}
}
graph: {
title: "is_ancestor.9"
label: "bb 9"
folding: 1
vertical_order: 6
shape: ellipse
node: {
label: "   "
vertical_order: 6
}
}
graph: {
title: "is_ancestor.7"
label: "bb 7"
folding: 1
vertical_order: 8
shape: ellipse
node: {
label: "  eD.4197_10 = veD.4196_13->edgeD.4138;  
  D.5595_11 = eD.4197_10->typeD.4133;  
  if (D.5595_11 == 1)  
    goto <bb 8>;  
  else  
    goto <bb 14>;  "
vertical_order: 8
}
}
graph: {
title: "is_ancestor.12"
label: "bb 12"
folding: 1
vertical_order: 7
shape: ellipse
node: {
label: "  veD.4196_13 = veD.4196_24->nextD.4139;  
  if (veD.4196_13 != 0B)  
    goto <bb 7>;  
  else  
    goto <bb 10>;  "
vertical_order: 7
}
}
graph: {
title: "is_ancestor.14"
label: "bb 14"
folding: 1
vertical_order: 9
shape: ellipse
node: {
label: "  goto <bb 12>;  "
vertical_order: 9
}
}
edge: {
sourcename: "is_ancestor.ENTRY"
targetname: "is_ancestor.2"
}
edge: {
sourcename: "is_ancestor.2"
targetname: "is_ancestor.11"
}
edge: {
sourcename: "is_ancestor.2"
targetname: "is_ancestor.3"
}
edge: {
sourcename: "is_ancestor.3"
targetname: "is_ancestor.5"
}
edge: {
sourcename: "is_ancestor.10"
targetname: "is_ancestor.4"
}
edge: {
sourcename: "is_ancestor.4"
targetname: "is_ancestor.11"
}
edge: {
sourcename: "is_ancestor.4"
targetname: "is_ancestor.13"
}
edge: {
sourcename: "is_ancestor.13"
targetname: "is_ancestor.5"
linestyle: dashed
}
edge: {
sourcename: "is_ancestor.5"
targetname: "is_ancestor.6"
}
edge: {
sourcename: "is_ancestor.5"
targetname: "is_ancestor.10"
}
edge: {
sourcename: "is_ancestor.6"
targetname: "is_ancestor.8"
}
edge: {
sourcename: "is_ancestor.6"
targetname: "is_ancestor.9"
}
edge: {
sourcename: "is_ancestor.12"
targetname: "is_ancestor.7"
}
edge: {
sourcename: "is_ancestor.7"
targetname: "is_ancestor.8"
}
edge: {
sourcename: "is_ancestor.7"
targetname: "is_ancestor.14"
}
edge: {
sourcename: "is_ancestor.14"
targetname: "is_ancestor.12"
linestyle: dashed
}
edge: {
sourcename: "is_ancestor.8"
targetname: "is_ancestor.10"
}
edge: {
sourcename: "is_ancestor.9"
targetname: "is_ancestor.12"
}
edge: {
sourcename: "is_ancestor.12"
targetname: "is_ancestor.10"
}
edge: {
sourcename: "is_ancestor.10"
targetname: "is_ancestor.11"
}
edge: {
sourcename: "is_ancestor.11"
targetname: "is_ancestor.EXIT"
}
}
graph: {
title: "mark_edge"
node.color: white
folding: 1
graph: {
title: "mark_edge.ENTRY"
label: "ENTRY"
folding: 1
vertical_order: 1
shape: ellipse
node: {
label: "ENTRY"
vertical_order: 1
}
}
graph: {
title: "mark_edge.EXIT"
label: "EXIT"
folding: 1
vertical_order: 2
shape: ellipse
node: {
label: "EXIT"
vertical_order: 2
}
}
}
graph: {
title: "mark_edges"
node.color: white
folding: 1
graph: {
title: "mark_edges.ENTRY"
label: "ENTRY"
folding: 1
vertical_order: 1
shape: ellipse
node: {
label: "ENTRY"
vertical_order: 1
}
}
graph: {
title: "mark_edges.EXIT"
label: "EXIT"
folding: 1
vertical_order: 2
shape: ellipse
node: {
label: "EXIT"
vertical_order: 2
}
}
}
graph: {
title: "calc_max_distance_recursive"
node.color: white
folding: 1
graph: {
title: "calc_max_distance_recursive.ENTRY"
label: "ENTRY"
folding: 1
vertical_order: 1
shape: ellipse
node: {
label: "ENTRY"
vertical_order: 1
}
}
graph: {
title: "calc_max_distance_recursive.EXIT"
label: "EXIT"
folding: 1
vertical_order: 2
shape: ellipse
node: {
label: "EXIT"
vertical_order: 2
}
}
}
graph: {
title: "calc_max_distance"
node.color: white
folding: 1
graph: {
title: "calc_max_distance.ENTRY"
label: "ENTRY"
folding: 1
vertical_order: 1
shape: ellipse
node: {
label: "ENTRY"
vertical_order: 1
}
}
graph: {
title: "calc_max_distance.EXIT"
label: "EXIT"
folding: 1
vertical_order: 2
shape: ellipse
node: {
label: "EXIT"
vertical_order: 2
}
}
}
graph: {
title: "fine_tune_cfg"
node.color: white
folding: 1
graph: {
title: "fine_tune_cfg.ENTRY"
label: "ENTRY"
folding: 1
vertical_order: 1
shape: ellipse
node: {
label: "ENTRY"
vertical_order: 1
}
}
graph: {
title: "fine_tune_cfg.EXIT"
label: "EXIT"
folding: 1
vertical_order: 2
shape: ellipse
node: {
label: "EXIT"
vertical_order: 2
}
}
}
}
