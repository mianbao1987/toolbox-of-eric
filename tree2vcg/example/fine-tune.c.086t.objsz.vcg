graph: {
node.borderwidth: 1
//node.margin: 1
edge.thickness: 1
splines: yes
//layoutalgorithm: max_depth
graph: {
title: "search"
node.color: white
folding: 1
graph: {
title: "search.ENTRY"
label: "ENTRY"
folding: 1
vertical_order: 1
shape: ellipse
node: {
label: "ENTRY"
vertical_order: 1
}
}
graph: {
title: "search.EXIT"
label: "EXIT"
folding: 1
vertical_order: 7
shape: ellipse
node: {
label: "EXIT"
vertical_order: 7
}
}
graph: {
title: "search.2"
label: "bb 2"
folding: 1
vertical_order: 2
shape: ellipse
node: {
label: "  bbD.4175_2(D)->visitedD.4144 = 1;  
  veD.4179_3 = bbD.4175_2(D)->succD.4149;  
  if (veD.4179_3 != 0B)  
    goto <bb 3>;  
  else  
    goto <bb 6>;  "
vertical_order: 2
}
}
graph: {
title: "search.3"
label: "bb 3"
folding: 1
vertical_order: 3
shape: ellipse
node: {
label: "  eD.4180_4 = veD.4179_9->edgeD.4138;  
  succ_bbD.4178_5 = eD.4180_4->targetD.4135;  
  D.5604_6 = succ_bbD.4178_5->visitedD.4144;  
  if (D.5604_6 == 0)  
    goto <bb 4>;  
  else  
    goto <bb 5>;  "
vertical_order: 3
}
}
graph: {
title: "search.6"
label: "bb 6"
folding: 1
vertical_order: 6
shape: ellipse
node: {
label: "  count.10D.5607_8 = countD.4173;  
  bbD.4175_2(D)->dfs_orderD.4145 = count.10D.5607_8;  
  count.11D.5608_10 = count.10D.5607_8 + -1;  
  countD.4173 = count.11D.5608_10;  
  return;  "
vertical_order: 6
}
}
graph: {
title: "search.5"
label: "bb 5"
folding: 1
vertical_order: 5
shape: ellipse
node: {
label: "  veD.4179_7 = veD.4179_9->nextD.4139;  
  if (veD.4179_7 != 0B)  
    goto <bb 3>;  
  else  
    goto <bb 6>;  "
vertical_order: 5
}
}
graph: {
title: "search.4"
label: "bb 4"
folding: 1
vertical_order: 4
shape: ellipse
node: {
label: "  eD.4180_4->typeD.4133 = 1;  
  searchD.4176 (succ_bbD.4178_5);  "
vertical_order: 4
}
}
edge: {
sourcename: "search.ENTRY"
targetname: "search.2"
}
edge: {
sourcename: "search.2"
targetname: "search.3"
}
edge: {
sourcename: "search.2"
targetname: "search.6"
}
edge: {
sourcename: "search.5"
targetname: "search.3"
linestyle: dashed
}
edge: {
sourcename: "search.3"
targetname: "search.4"
}
edge: {
sourcename: "search.3"
targetname: "search.5"
}
edge: {
sourcename: "search.4"
targetname: "search.5"
}
edge: {
sourcename: "search.5"
targetname: "search.6"
}
edge: {
sourcename: "search.6"
targetname: "search.EXIT"
}
}
graph: {
title: "depth_first_search"
node.color: white
folding: 1
graph: {
title: "depth_first_search.ENTRY"
label: "ENTRY"
folding: 1
vertical_order: 1
shape: ellipse
node: {
label: "ENTRY"
vertical_order: 1
}
}
graph: {
title: "depth_first_search.EXIT"
label: "EXIT"
folding: 1
vertical_order: 5
shape: ellipse
node: {
label: "EXIT"
vertical_order: 5
}
}
graph: {
title: "depth_first_search.2"
label: "bb 2"
folding: 1
vertical_order: 2
shape: ellipse
node: {
label: "  cfg.8D.5601_2 = cfgD.4174;  
  bbD.4187_3 = cfg.8D.5601_2->bbD.4157;  
  if (bbD.4187_3 != 0B)  
    goto <bb 3>;  
  else  
    goto <bb 4>;  "
vertical_order: 2
}
}
graph: {
title: "depth_first_search.3"
label: "bb 3"
folding: 1
vertical_order: 3
shape: ellipse
node: {
label: "  bbD.4187_14->visitedD.4144 = 0;  
  bbD.4187_4 = bbD.4187_14->nextD.4151;  
  if (bbD.4187_4 != 0B)  
    goto <bb 3>;  
  else  
    goto <bb 4>;  "
vertical_order: 3
}
}
graph: {
title: "depth_first_search.4"
label: "bb 4"
folding: 1
vertical_order: 4
shape: ellipse
node: {
label: "  count.9D.5602_6 = cfg.8D.5601_2->bb_numD.4153;  
  countD.4173 = count.9D.5602_6;  
  D.5603_8 = cfg.8D.5601_2->entryD.4155;  
  searchD.4176 (D.5603_8);  
  return;  "
vertical_order: 4
}
}
edge: {
sourcename: "depth_first_search.ENTRY"
targetname: "depth_first_search.2"
}
edge: {
sourcename: "depth_first_search.2"
targetname: "depth_first_search.3"
}
edge: {
sourcename: "depth_first_search.2"
targetname: "depth_first_search.4"
}
edge: {
sourcename: "depth_first_search.3"
targetname: "depth_first_search.3"
linestyle: dashed
}
edge: {
sourcename: "depth_first_search.3"
targetname: "depth_first_search.4"
}
edge: {
sourcename: "depth_first_search.4"
targetname: "depth_first_search.EXIT"
}
}
graph: {
title: "is_ancestor"
node.color: white
folding: 1
graph: {
title: "is_ancestor.ENTRY"
label: "ENTRY"
folding: 1
vertical_order: 1
shape: ellipse
node: {
label: "ENTRY"
vertical_order: 1
}
}
graph: {
title: "is_ancestor.EXIT"
label: "EXIT"
folding: 1
vertical_order: 11
shape: ellipse
node: {
label: "EXIT"
vertical_order: 11
}
}
graph: {
title: "is_ancestor.2"
label: "bb 2"
folding: 1
vertical_order: 2
shape: ellipse
node: {
label: "  if (targetD.4192_5(D) == sourceD.4191_7(D))  
    goto <bb 10>;  
  else  
    goto <bb 4>;  "
vertical_order: 2
}
}
graph: {
title: "is_ancestor.10"
label: "bb 10"
folding: 1
vertical_order: 10
shape: ellipse
node: {
label: "  return D.5594_4;  "
vertical_order: 10
}
}
graph: {
title: "is_ancestor.4"
label: "bb 4"
folding: 1
vertical_order: 3
shape: ellipse
node: {
label: "  veD.4196_9 = bbD.4195_21->predD.4147;  
  if (veD.4196_9 != 0B)  
    goto <bb 5>;  
  else  
    goto <bb 9>;  "
vertical_order: 3
}
}
graph: {
title: "is_ancestor.3"
label: "bb 3"
folding: 1
vertical_order: 9
shape: ellipse
node: {
label: "  if (bbD.4195_2 == sourceD.4191_7(D))  
    goto <bb 10>;  
  else  
    goto <bb 4>;  "
vertical_order: 9
}
}
graph: {
title: "is_ancestor.9"
label: "bb 9"
folding: 1
vertical_order: 8
shape: ellipse
node: {
label: "  cfg.7D.5598_14 = cfgD.4174;  
  D.5599_15 = cfg.7D.5598_14->entryD.4155;  
  if (D.5599_15 != bbD.4195_2)  
    goto <bb 3>;  
  else  
    goto <bb 10>;  "
vertical_order: 8
}
}
graph: {
title: "is_ancestor.5"
label: "bb 5"
folding: 1
vertical_order: 4
shape: ellipse
node: {
label: "  eD.4197_20 = veD.4196_9->edgeD.4138;  
  D.5595_23 = eD.4197_20->typeD.4133;  
  if (D.5595_23 == 1)  
    goto <bb 7>;  
  else  
    goto <bb 8>;  "
vertical_order: 4
}
}
graph: {
title: "is_ancestor.7"
label: "bb 7"
folding: 1
vertical_order: 7
shape: ellipse
node: {
label: "  bbD.4195_12 = eD.4197_18->sourceD.4134;  
  goto <bb 9>;  "
vertical_order: 7
}
}
graph: {
title: "is_ancestor.8"
label: "bb 8"
folding: 1
vertical_order: 5
shape: ellipse
node: {
label: "  veD.4196_13 = veD.4196_24->nextD.4139;  
  if (veD.4196_13 != 0B)  
    goto <bb 6>;  
  else  
    goto <bb 9>;  "
vertical_order: 5
}
}
graph: {
title: "is_ancestor.6"
label: "bb 6"
folding: 1
vertical_order: 6
shape: ellipse
node: {
label: "  eD.4197_10 = veD.4196_13->edgeD.4138;  
  D.5595_11 = eD.4197_10->typeD.4133;  
  if (D.5595_11 == 1)  
    goto <bb 7>;  
  else  
    goto <bb 8>;  "
vertical_order: 6
}
}
edge: {
sourcename: "is_ancestor.ENTRY"
targetname: "is_ancestor.2"
}
edge: {
sourcename: "is_ancestor.2"
targetname: "is_ancestor.10"
}
edge: {
sourcename: "is_ancestor.2"
targetname: "is_ancestor.4"
}
edge: {
sourcename: "is_ancestor.9"
targetname: "is_ancestor.3"
}
edge: {
sourcename: "is_ancestor.3"
targetname: "is_ancestor.10"
}
edge: {
sourcename: "is_ancestor.3"
targetname: "is_ancestor.4"
linestyle: dashed
}
edge: {
sourcename: "is_ancestor.4"
targetname: "is_ancestor.5"
}
edge: {
sourcename: "is_ancestor.4"
targetname: "is_ancestor.9"
}
edge: {
sourcename: "is_ancestor.5"
targetname: "is_ancestor.7"
}
edge: {
sourcename: "is_ancestor.5"
targetname: "is_ancestor.8"
}
edge: {
sourcename: "is_ancestor.8"
targetname: "is_ancestor.6"
}
edge: {
sourcename: "is_ancestor.6"
targetname: "is_ancestor.7"
}
edge: {
sourcename: "is_ancestor.6"
targetname: "is_ancestor.8"
linestyle: dashed
}
edge: {
sourcename: "is_ancestor.7"
targetname: "is_ancestor.9"
}
edge: {
sourcename: "is_ancestor.8"
targetname: "is_ancestor.9"
}
edge: {
sourcename: "is_ancestor.9"
targetname: "is_ancestor.10"
}
edge: {
sourcename: "is_ancestor.10"
targetname: "is_ancestor.EXIT"
}
}
graph: {
title: "mark_edge"
node.color: white
folding: 1
graph: {
title: "mark_edge.ENTRY"
label: "ENTRY"
folding: 1
vertical_order: 1
shape: ellipse
node: {
label: "ENTRY"
vertical_order: 1
}
}
graph: {
title: "mark_edge.EXIT"
label: "EXIT"
folding: 1
vertical_order: 6
shape: ellipse
node: {
label: "EXIT"
vertical_order: 6
}
}
graph: {
title: "mark_edge.2"
label: "bb 2"
folding: 1
vertical_order: 2
shape: ellipse
node: {
label: "  sourceD.4206_2 = eD.4203_1(D)->sourceD.4134;  
  targetD.4207_3 = eD.4203_1(D)->targetD.4135;  
  D.5584_4 = is_ancestorD.4193 (targetD.4207_3, sourceD.4206_2);  
  if (D.5584_4 != 0)  
    goto <bb 3>;  
  else  
    goto <bb 4>;  "
vertical_order: 2
}
}
graph: {
title: "mark_edge.3"
label: "bb 3"
folding: 1
vertical_order: 3
shape: ellipse
node: {
label: "  eD.4203_1(D)->typeD.4133 = 3;  
  goto <bb 7>;  "
vertical_order: 3
}
}
graph: {
title: "mark_edge.4"
label: "bb 4"
folding: 1
vertical_order: 3
shape: ellipse
node: {
label: "  D.5588_5 = is_ancestorD.4193 (sourceD.4206_2, targetD.4207_3);  
  if (D.5588_5 != 0)  
    goto <bb 5>;  
  else  
    goto <bb 6>;  "
vertical_order: 3
}
}
graph: {
title: "mark_edge.7"
label: "bb 7"
folding: 1
vertical_order: 5
shape: ellipse
node: {
label: "  return;  "
vertical_order: 5
}
}
graph: {
title: "mark_edge.5"
label: "bb 5"
folding: 1
vertical_order: 4
shape: ellipse
node: {
label: "  eD.4203_1(D)->typeD.4133 = 2;  
  goto <bb 7>;  "
vertical_order: 4
}
}
graph: {
title: "mark_edge.6"
label: "bb 6"
folding: 1
vertical_order: 4
shape: ellipse
node: {
label: "  eD.4203_1(D)->typeD.4133 = 4;  "
vertical_order: 4
}
}
edge: {
sourcename: "mark_edge.ENTRY"
targetname: "mark_edge.2"
}
edge: {
sourcename: "mark_edge.2"
targetname: "mark_edge.3"
}
edge: {
sourcename: "mark_edge.2"
targetname: "mark_edge.4"
}
edge: {
sourcename: "mark_edge.3"
targetname: "mark_edge.7"
}
edge: {
sourcename: "mark_edge.4"
targetname: "mark_edge.5"
}
edge: {
sourcename: "mark_edge.4"
targetname: "mark_edge.6"
}
edge: {
sourcename: "mark_edge.5"
targetname: "mark_edge.7"
}
edge: {
sourcename: "mark_edge.6"
targetname: "mark_edge.7"
}
edge: {
sourcename: "mark_edge.7"
targetname: "mark_edge.EXIT"
}
}
graph: {
title: "mark_edges"
node.color: white
folding: 1
graph: {
title: "mark_edges.ENTRY"
label: "ENTRY"
folding: 1
vertical_order: 1
shape: ellipse
node: {
label: "ENTRY"
vertical_order: 1
}
}
graph: {
title: "mark_edges.EXIT"
label: "EXIT"
folding: 1
vertical_order: 7
shape: ellipse
node: {
label: "EXIT"
vertical_order: 7
}
}
graph: {
title: "mark_edges.2"
label: "bb 2"
folding: 1
vertical_order: 2
shape: ellipse
node: {
label: "  current_function.6D.5580_2 = current_functionD.4113;  
  cfgD.4211_3 = current_function.6D.5580_2->cfgD.4162;  
  eD.4212_4 = cfgD.4211_3->edgeD.4159;  
  if (eD.4212_4 != 0B)  
    goto <bb 3>;  
  else  
    goto <bb 6>;  "
vertical_order: 2
}
}
graph: {
title: "mark_edges.3"
label: "bb 3"
folding: 1
vertical_order: 3
shape: ellipse
node: {
label: "  D.5581_5 = eD.4212_13->typeD.4133;  
  if (D.5581_5 == 0)  
    goto <bb 4>;  
  else  
    goto <bb 5>;  "
vertical_order: 3
}
}
graph: {
title: "mark_edges.6"
label: "bb 6"
folding: 1
vertical_order: 6
shape: ellipse
node: {
label: "  return;  "
vertical_order: 6
}
}
graph: {
title: "mark_edges.5"
label: "bb 5"
folding: 1
vertical_order: 5
shape: ellipse
node: {
label: "  eD.4212_6 = eD.4212_13->nextD.4136;  
  if (eD.4212_6 != 0B)  
    goto <bb 3>;  
  else  
    goto <bb 6>;  "
vertical_order: 5
}
}
graph: {
title: "mark_edges.4"
label: "bb 4"
folding: 1
vertical_order: 4
shape: ellipse
node: {
label: "  mark_edgeD.4204 (eD.4212_13);  "
vertical_order: 4
}
}
edge: {
sourcename: "mark_edges.ENTRY"
targetname: "mark_edges.2"
}
edge: {
sourcename: "mark_edges.2"
targetname: "mark_edges.3"
}
edge: {
sourcename: "mark_edges.2"
targetname: "mark_edges.6"
}
edge: {
sourcename: "mark_edges.5"
targetname: "mark_edges.3"
linestyle: dashed
}
edge: {
sourcename: "mark_edges.3"
targetname: "mark_edges.4"
}
edge: {
sourcename: "mark_edges.3"
targetname: "mark_edges.5"
}
edge: {
sourcename: "mark_edges.4"
targetname: "mark_edges.5"
}
edge: {
sourcename: "mark_edges.5"
targetname: "mark_edges.6"
}
edge: {
sourcename: "mark_edges.6"
targetname: "mark_edges.EXIT"
}
}
graph: {
title: "calc_max_distance_recursive"
node.color: white
folding: 1
graph: {
title: "calc_max_distance_recursive.ENTRY"
label: "ENTRY"
folding: 1
vertical_order: 1
shape: ellipse
node: {
label: "ENTRY"
vertical_order: 1
}
}
graph: {
title: "calc_max_distance_recursive.EXIT"
label: "EXIT"
folding: 1
vertical_order: 9
shape: ellipse
node: {
label: "EXIT"
vertical_order: 9
}
}
graph: {
title: "calc_max_distance_recursive.2"
label: "bb 2"
folding: 1
vertical_order: 2
shape: ellipse
node: {
label: "  D.5570_6 = bbD.4216_5(D)->max_distanceD.4146;  
  if (D.5570_6 == 0)  
    goto <bb 3>;  
  else  
    goto <bb 8>;  "
vertical_order: 2
}
}
graph: {
title: "calc_max_distance_recursive.3"
label: "bb 3"
folding: 1
vertical_order: 3
shape: ellipse
node: {
label: "  veD.4221_7 = bbD.4216_5(D)->predD.4147;  
  if (veD.4221_7 != 0B)  
    goto <bb 4>;  
  else  
    goto <bb 7>;  "
vertical_order: 3
}
}
graph: {
title: "calc_max_distance_recursive.8"
label: "bb 8"
folding: 1
vertical_order: 8
shape: ellipse
node: {
label: "  D.5578_15 = bbD.4216_5(D)->max_distanceD.4146;  
  return D.5578_15;  "
vertical_order: 8
}
}
graph: {
title: "calc_max_distance_recursive.4"
label: "bb 4"
folding: 1
vertical_order: 4
shape: ellipse
node: {
label: "  eD.4222_8 = veD.4221_27->edgeD.4138;  
  D.5573_9 = eD.4222_8->typeD.4133;  
  if (D.5573_9 == 3)  
    goto <bb 6>;  
  else  
    goto <bb 5>;  "
vertical_order: 4
}
}
graph: {
title: "calc_max_distance_recursive.7"
label: "bb 7"
folding: 1
vertical_order: 7
shape: ellipse
node: {
label: "  D.5577_14 = maxD.4220_22 + 1;  
  bbD.4216_5(D)->max_distanceD.4146 = D.5577_14;  "
vertical_order: 7
}
}
graph: {
title: "calc_max_distance_recursive.6"
label: "bb 6"
folding: 1
vertical_order: 6
shape: ellipse
node: {
label: "  veD.4221_13 = veD.4221_27->nextD.4139;  
  if (veD.4221_13 != 0B)  
    goto <bb 4>;  
  else  
    goto <bb 7>;  "
vertical_order: 6
}
}
graph: {
title: "calc_max_distance_recursive.5"
label: "bb 5"
folding: 1
vertical_order: 5
shape: ellipse
node: {
label: "  D.5576_10 = eD.4222_8->sourceD.4134;  
  valD.4219_11 = calc_max_distance_recursiveD.4217 (D.5576_10);  
  maxD.4220_12 = MAX_EXPR <valD.4219_11, maxD.4220_24>;  "
vertical_order: 5
}
}
edge: {
sourcename: "calc_max_distance_recursive.ENTRY"
targetname: "calc_max_distance_recursive.2"
}
edge: {
sourcename: "calc_max_distance_recursive.2"
targetname: "calc_max_distance_recursive.3"
}
edge: {
sourcename: "calc_max_distance_recursive.2"
targetname: "calc_max_distance_recursive.8"
}
edge: {
sourcename: "calc_max_distance_recursive.3"
targetname: "calc_max_distance_recursive.4"
}
edge: {
sourcename: "calc_max_distance_recursive.3"
targetname: "calc_max_distance_recursive.7"
}
edge: {
sourcename: "calc_max_distance_recursive.6"
targetname: "calc_max_distance_recursive.4"
linestyle: dashed
}
edge: {
sourcename: "calc_max_distance_recursive.4"
targetname: "calc_max_distance_recursive.6"
}
edge: {
sourcename: "calc_max_distance_recursive.4"
targetname: "calc_max_distance_recursive.5"
}
edge: {
sourcename: "calc_max_distance_recursive.5"
targetname: "calc_max_distance_recursive.6"
}
edge: {
sourcename: "calc_max_distance_recursive.6"
targetname: "calc_max_distance_recursive.7"
}
edge: {
sourcename: "calc_max_distance_recursive.7"
targetname: "calc_max_distance_recursive.8"
}
edge: {
sourcename: "calc_max_distance_recursive.8"
targetname: "calc_max_distance_recursive.EXIT"
}
}
graph: {
title: "calc_max_distance"
node.color: white
folding: 1
graph: {
title: "calc_max_distance.ENTRY"
label: "ENTRY"
folding: 1
vertical_order: 1
shape: ellipse
node: {
label: "ENTRY"
vertical_order: 1
}
}
graph: {
title: "calc_max_distance.EXIT"
label: "EXIT"
folding: 1
vertical_order: 8
shape: ellipse
node: {
label: "EXIT"
vertical_order: 8
}
}
graph: {
title: "calc_max_distance.2"
label: "bb 2"
folding: 1
vertical_order: 2
shape: ellipse
node: {
label: "  depth_first_searchD.4185 ();  
  mark_edgesD.4209 ();  
  cfg.4D.5561_6 = cfgD.4174;  
  D.5562_7 = cfg.4D.5561_6->exitD.4156;  
  maxD.4231_8 = calc_max_distance_recursiveD.4217 (D.5562_7);  
  bbD.4232_10 = cfg.4D.5561_6->bbD.4157;  
  if (bbD.4232_10 != 0B)  
    goto <bb 3>;  
  else  
    goto <bb 7>;  "
vertical_order: 2
}
}
graph: {
title: "calc_max_distance.3"
label: "bb 3"
folding: 1
vertical_order: 3
shape: ellipse
node: {
label: "  D.5563_11 = bbD.4232_28->max_distanceD.4146;  
  if (D.5563_11 == 0)  
    goto <bb 4>;  
  else  
    goto <bb 6>;  "
vertical_order: 3
}
}
graph: {
title: "calc_max_distance.7"
label: "bb 7"
folding: 1
vertical_order: 7
shape: ellipse
node: {
label: "  D.5562_18 = cfg.4D.5561_6->exitD.4156;  
  D.5562_18->max_distanceD.4146 = maxD.4231_4;  
  return;  "
vertical_order: 7
}
}
graph: {
title: "calc_max_distance.6"
label: "bb 6"
folding: 1
vertical_order: 6
shape: ellipse
node: {
label: "  bbD.4232_16 = bbD.4232_28->nextD.4151;  
  if (bbD.4232_16 != 0B)  
    goto <bb 3>;  
  else  
    goto <bb 7>;  "
vertical_order: 6
}
}
graph: {
title: "calc_max_distance.4"
label: "bb 4"
folding: 1
vertical_order: 4
shape: ellipse
node: {
label: "  valD.4230_12 = calc_max_distance_recursiveD.4217 (bbD.4232_28);  
  if (valD.4230_12 >= maxD.4231_27)  
    goto <bb 5>;  
  else  
    goto <bb 6>;  "
vertical_order: 4
}
}
graph: {
title: "calc_max_distance.5"
label: "bb 5"
folding: 1
vertical_order: 5
shape: ellipse
node: {
label: "  maxD.4231_13 = valD.4230_12 + 1;  "
vertical_order: 5
}
}
edge: {
sourcename: "calc_max_distance.ENTRY"
targetname: "calc_max_distance.2"
}
edge: {
sourcename: "calc_max_distance.2"
targetname: "calc_max_distance.3"
}
edge: {
sourcename: "calc_max_distance.2"
targetname: "calc_max_distance.7"
}
edge: {
sourcename: "calc_max_distance.6"
targetname: "calc_max_distance.3"
linestyle: dashed
}
edge: {
sourcename: "calc_max_distance.3"
targetname: "calc_max_distance.4"
}
edge: {
sourcename: "calc_max_distance.3"
targetname: "calc_max_distance.6"
}
edge: {
sourcename: "calc_max_distance.4"
targetname: "calc_max_distance.5"
}
edge: {
sourcename: "calc_max_distance.4"
targetname: "calc_max_distance.6"
}
edge: {
sourcename: "calc_max_distance.5"
targetname: "calc_max_distance.6"
}
edge: {
sourcename: "calc_max_distance.6"
targetname: "calc_max_distance.7"
}
edge: {
sourcename: "calc_max_distance.7"
targetname: "calc_max_distance.EXIT"
}
}
graph: {
title: "fine_tune_cfg"
node.color: white
folding: 1
graph: {
title: "fine_tune_cfg.ENTRY"
label: "ENTRY"
folding: 1
vertical_order: 1
shape: ellipse
node: {
label: "ENTRY"
vertical_order: 1
}
}
graph: {
title: "fine_tune_cfg.EXIT"
label: "EXIT"
folding: 1
vertical_order: 5
shape: ellipse
node: {
label: "EXIT"
vertical_order: 5
}
}
graph: {
title: "fine_tune_cfg.2"
label: "bb 2"
folding: 1
vertical_order: 2
shape: ellipse
node: {
label: "  first_function.0D.5557_1 = first_functionD.4111;  
  current_functionD.4113 = first_function.0D.5557_1;  
  if (first_function.0D.5557_1 != 0B)  
    goto <bb 3>;  
  else  
    goto <bb 4>;  "
vertical_order: 2
}
}
graph: {
title: "fine_tune_cfg.3"
label: "bb 3"
folding: 1
vertical_order: 3
shape: ellipse
node: {
label: "  cfg.2D.5559_4 = current_function.1D.5558_14->cfgD.4162;  
  cfgD.4174 = cfg.2D.5559_4;  
  calc_max_distanceD.4228 ();  
  current_function.1D.5558_5 = current_functionD.4113;  
  current_function.3D.5560_6 = current_function.1D.5558_5->nextD.4163;  
  current_functionD.4113 = current_function.3D.5560_6;  
  if (current_function.3D.5560_6 != 0B)  
    goto <bb 3>;  
  else  
    goto <bb 4>;  "
vertical_order: 3
}
}
graph: {
title: "fine_tune_cfg.4"
label: "bb 4"
folding: 1
vertical_order: 4
shape: ellipse
node: {
label: "  return;  "
vertical_order: 4
}
}
edge: {
sourcename: "fine_tune_cfg.ENTRY"
targetname: "fine_tune_cfg.2"
}
edge: {
sourcename: "fine_tune_cfg.2"
targetname: "fine_tune_cfg.3"
}
edge: {
sourcename: "fine_tune_cfg.2"
targetname: "fine_tune_cfg.4"
}
edge: {
sourcename: "fine_tune_cfg.3"
targetname: "fine_tune_cfg.3"
linestyle: dashed
}
edge: {
sourcename: "fine_tune_cfg.3"
targetname: "fine_tune_cfg.4"
}
edge: {
sourcename: "fine_tune_cfg.4"
targetname: "fine_tune_cfg.EXIT"
}
}
}
